//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RoboCup.AtHome.GPSRCmdGen {
    using System;
    
    
    /// <summary>
    ///   Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
    /// </summary>
    // StronglyTypedResourceBuilder generó automáticamente esta clase
    // a través de una herramienta como ResGen o Visual Studio.
    // Para agregar o quitar un miembro, edite el archivo .ResX y, a continuación, vuelva a ejecutar ResGen
    // con la opción /str o recompile su proyecto de VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RoboCup.AtHome.GPSRCmdGen.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
        ///   búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a ; grammar name Category I
        ///; grammar tier Easy
        ///
        ///$Main     = $complex.
        ///
        ///
        ///##############################################################################
        ///#
        ///# Complex commands
        ///#
        ///##############################################################################
        ///$complex  = $triple
        ///$complex  = $doublel, and $single
        ///$complex  = $single, $doubler
        ///$complex  = $single, $single, and $single
        ///
        ///##############################################################################
        ///#
        ///# Triple task commands (in logical [resto de la cadena truncado]&quot;;.
        /// </summary>
        internal static string Category1Grammar {
            get {
                return ResourceManager.GetString("Category1Grammar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a ; grammar name Category II
        ///; grammar tier Moderate
        ///
        ///$Main     = $polite $complex.
        ///
        ///
        ///##############################################################################
        ///#
        ///# Complex commands
        ///#
        ///##############################################################################
        ///$complex  = $triple
        ///$complex  = $single, $single, and $single
        ///$complex  = $doublel, and $single
        ///$complex  = $single, $doubler
        ///
        ///##############################################################################
        ///#
        ///# Triple task command [resto de la cadena truncado]&quot;;.
        /// </summary>
        internal static string Category2Grammar {
            get {
                return ResourceManager.GetString("Category2Grammar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a ; grammar name Category III
        ///; grammar tier High
        ///
        ///$Main     = $polite $complex.
        ///
        ///
        ///##############################################################################
        ///#
        ///# Complex commands
        ///#
        ///##############################################################################
        ///$complex  = $triple
        ///$complex  = $single, $single, and $single
        ///$complex  = $doublel, and $single
        ///$complex  = $single, $doubler
        ///
        ///##############################################################################
        ///#
        ///# Triple task commands
        /// [resto de la cadena truncado]&quot;;.
        /// </summary>
        internal static string Category3Grammar {
            get {
                return ResourceManager.GetString("Category3Grammar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a ; grammar name Count
        ///; grammar tier High
        ///
        ///$Main   = $count
        ///$count  = $count1 | $count2 | $count3
        ///
        ///$count1 = count the $cntxat $report
        ///$cntxat = $cntoat | $cntpat
        ///$cntoat = $object at the {placement 1}
        ///$cntpat = $people at the {room 1}
        ///
        ///$count2 = $navigt $docntx $report 
        ///$navigt = $goverb to the 
        ///$docntx = $docnto | $docntp
        ///$docnto = {placement 2}, count the $object
        ///$docntp = {room 2}, count the $people
        /// 
        ///$count3 = Tell $target how many $ctable
        ///$ctable = $objain | $pplain
        ///$objain = $object [resto de la cadena truncado]&quot;;.
        /// </summary>
        internal static string CountGrammar {
            get {
                return ResourceManager.GetString("CountGrammar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a /*****************************************************************************
        ///*
        ///* FORMAT
        ///*
        ///******************************************************************************
        ///*
        ///* ROOT
        ///* The root rule S of the grammar is the $Main Non-Terminal. In order for the
        ///* grammar to be valid, it must contain at least one $Main rule.
        ///*
        ///* Non-Terminal identifiers
        ///* A valid Non-Terminal identifier is a sequence of one or more letters,
        ///* digits, or underscore characters (_). Spaces, punctuation marks, and symbols [resto de la cadena truncado]&quot;;.
        /// </summary>
        internal static string FormatSpecification {
            get {
                return ResourceManager.GetString("FormatSpecification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a ##############################################################################
        ///#
        ///# ${GrammarName} Grammar
        ///# 
        ///# Author:  Mauricio Matamoros
        ///# Date:    March 2015
        ///#
        ///# IMPORTANT: 
        ///# Since this document declares a grammar for generating sentences,
        ///# NO RECURSIVE rules must be used.
        ///# 
        ///##############################################################################
        ///.
        /// </summary>
        internal static string GrammarHeader {
            get {
                return ResourceManager.GetString("GrammarHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a ; grammar name Incomplete Commands
        ///; grammar tier High
        ///
        ///$Main = $complex
        ///
        ///##############################################################################
        ///#
        ///# Complex Command: Get an object and deliver it
        ///# 
        ///##############################################################################
        ///$complex	= $getobjobf and $deliver
        ///$complex	= $getobj and $deliverobf
        ///
        ///$getobj		= $vbtake the {aobject} from the {placement 1}
        ///$getobjobf	= $vbtake the {aobject?} from the {placement 1}
        ///
        ///$deliverobf	= $vbdeliver [resto de la cadena truncado]&quot;;.
        /// </summary>
        internal static string IncompleteCommandsGrammar {
            get {
                return ResourceManager.GetString("IncompleteCommandsGrammar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a ; grammar name Incongruent Commands
        ///; grammar tier High
        ///
        ///$Main		= $complex
        ///
        ///##############################################################################
        ///#
        ///# Complex Command: Move an object to same place
        ///# 
        ///##############################################################################
        ///$incngrnt	= $getobj and $dlvrsame
        ///
        ///$getobj		= $vbtake the {object} from the {placement 1}
        ///$dlvrsame	= $vbdeliver it to {placement 1 meta: replace with {placement 2}}
        ///
        ///########################################### [resto de la cadena truncado]&quot;;.
        /// </summary>
        internal static string IncongruentCommandsGrammar {
            get {
                return ResourceManager.GetString("IncongruentCommandsGrammar", resourceCulture);
            }
        }
    }
}
